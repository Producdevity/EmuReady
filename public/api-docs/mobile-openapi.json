{
  "openapi": "3.0.0",
  "info": {
    "title": "EmuReady Mobile API (tRPC)",
    "description": "\n# EmuReady Mobile tRPC API\n\nComplete API documentation for EmuReady mobile applications built with tRPC.\n\n## tRPC HTTP Method Conventions\n\nNOTE: the protected routes require authentication via Clerk JWT token in the Authorization header. This isn't implemented yet.\n\ntRPC uses HTTP method semantics with fetchRequestHandler:\n- **Queries** use **GET** requests with input as query parameter\n- **Mutations** use **POST** requests with input in request body\n\n### Schema References:\n\nAll input schemas are defined in the **components/schemas** section. When you see a parameter referencing a schema (e.g., GetEmulatorsSchema), check the schemas section for the complete structure with field types, validations, and defaults.\n\n### Usage Examples:\n\n```bash\n# Query: Get games with search and limit (GET with SuperJSON wrapped input)\n# Schema: See components/schemas/GetGamesSchema\ncurl -X GET \"https://www.emuready.com/api/mobile/trpc/games.getGames?input=%7B%22json%22%3A%7B%22search%22%3A%22mario%22%2C%22limit%22%3A5%7D%7D\" \\\n  -H \"Content-Type: application/json\"\n\n# Query: Get popular games (GET, no input required)\ncurl -X GET \"https://www.emuready.com/api/mobile/trpc/games.getPopularGames\" \\\n  -H \"Content-Type: application/json\"\n\n# Query: Get listings with filters (GET with SuperJSON wrapped input)\ncurl -X GET \"https://www.emuready.com/api/mobile/trpc/listings.getListings?input=%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A10%2C%22search%22%3A%22zelda%22%7D%7D\" \\\n  -H \"Content-Type: application/json\"\n\n# Mutation: Create listing (POST with request body)\ncurl -X POST \"https://www.emuready.com/api/mobile/trpc/listings.createListing\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_JWT_TOKEN\" \\\n  -d '{\"gameId\":\"uuid\",\"deviceId\":\"uuid\",\"emulatorId\":\"uuid\",\"performanceId\":\"uuid\"}'\n\n# Protected query with authentication (GET with query parameter and auth header)\ncurl -X GET \"https://www.emuready.com/api/mobile/trpc/listings.getUserListings?input=%7B%22userId%22%3A%22uuid%22%7D\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Authorization: Bearer YOUR_JWT_TOKEN\"\n```\n\n### Important Notes:\n\n**For Queries (GET requests):**\n✅ Use GET method\n✅ Send input wrapped in SuperJSON format: `{\"json\":{\"field\":\"value\"}}`\n✅ URL-encode the entire JSON string\n✅ Many endpoints have defaults and don't require input\n✅ Input parameter format: `?input={\"json\":{\"field\":\"value\"}}` (URL-encoded)\n\n**For Mutations (POST requests):**\n✅ Use POST method\n✅ Send input as JSON in request body\n✅ Set Content-Type: application/json\n\n### Response Format:\nAll responses are wrapped in a tRPC result object:\n```json\n{\n  \"result\": {\n    \"data\": /* response data */\n  }\n}\n```\n\n### Error Response Format:\n```json\n{\n  \"error\": {\n    \"json\": {\n      \"message\": \"Error message\",\n      \"code\": -32600,\n      \"data\": {\n        \"code\": \"BAD_REQUEST\",\n        \"httpStatus\": 400,\n        \"path\": \"games.getGames\"\n      }\n    }\n  }\n}\n```\n\nThis API provides endpoints for:\n- Game emulation listings management\n- User authentication and profiles  \n- Device and hardware information\n- Emulator data and compatibility\n- Community features (comments, votes)\n      ",
    "version": "1.0.0",
    "contact": {
      "name": "EmuReady API Support",
      "url": "https://github.com/Producdevity/EmuReady"
    },
    "license": {
      "name": "GPL-3.0-or-later",
      "url": "https://github.com/Producdevity/EmuReady/blob/master/LICENSE"
    }
  },
  "servers": [
    {
      "url": "/api/mobile/trpc",
      "description": "Mobile API Base URL"
    }
  ],
  "security": [
    {
      "ClerkAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "ClerkAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Clerk JWT token obtained from authentication"
      }
    },
    "schemas": {
      "TRPCError": {
        "type": "object",
        "description": "tRPC error response format",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "json": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Error message, often includes validation details"
                  },
                  "code": {
                    "type": "number",
                    "description": "tRPC error code (-32600 for BAD_REQUEST, etc.)"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Error type code (BAD_REQUEST, UNAUTHORIZED, etc.)"
                      },
                      "httpStatus": {
                        "type": "number",
                        "description": "HTTP status code"
                      },
                      "path": {
                        "type": "string",
                        "description": "tRPC procedure path (e.g., \"games.getGames\")"
                      },
                      "zodError": {
                        "type": "object",
                        "description": "Zod validation error details (if applicable)",
                        "properties": {
                          "formErrors": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "fieldErrors": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "message",
                  "code",
                  "data"
                ]
              }
            },
            "required": [
              "json"
            ]
          }
        },
        "required": [
          "error"
        ]
      },
      "ValidateTokenSchema": {
        "$ref": "#/definitions/ValidateTokenSchema",
        "definitions": {
          "ValidateTokenSchema": {
            "type": "object",
            "properties": {
              "token": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "token"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "RefreshTokenSchema": {
        "$ref": "#/definitions/RefreshTokenSchema",
        "definitions": {
          "RefreshTokenSchema": {
            "type": "object",
            "properties": {
              "refreshToken": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "refreshToken"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "VerifyEmailSchema": {
        "$ref": "#/definitions/VerifyEmailSchema",
        "definitions": {
          "VerifyEmailSchema": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "minLength": 6,
                "maxLength": 6
              },
              "clerkUserId": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "code",
              "clerkUserId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "UpdateMobileProfileSchema": {
        "$ref": "#/definitions/UpdateMobileProfileSchema",
        "definitions": {
          "UpdateMobileProfileSchema": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "lastName": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "profileImageUrl": {
                "type": "string",
                "format": "uri"
              }
            },
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "DeleteMobileAccountSchema": {
        "$ref": "#/definitions/DeleteMobileAccountSchema",
        "definitions": {
          "DeleteMobileAccountSchema": {
            "type": "object",
            "properties": {
              "confirmationText": {
                "type": "string",
                "const": "DELETE"
              }
            },
            "required": [
              "confirmationText"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetCpusSchema": {
        "$ref": "#/definitions/GetCpusSchema",
        "definitions": {
          "GetCpusSchema": {
            "type": "object",
            "properties": {
              "search": {
                "type": "string"
              },
              "brandId": {
                "type": "string",
                "format": "uuid"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 50
              }
            },
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "IsVerifiedDeveloperSchema": {
        "$ref": "#/definitions/IsVerifiedDeveloperSchema",
        "definitions": {
          "IsVerifiedDeveloperSchema": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid"
              },
              "emulatorId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "userId",
              "emulatorId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "VerifyListingSchema": {
        "$ref": "#/definitions/VerifyListingSchema",
        "definitions": {
          "VerifyListingSchema": {
            "type": "object",
            "properties": {
              "listingId": {
                "type": "string",
                "format": "uuid"
              },
              "notes": {
                "type": "string"
              }
            },
            "required": [
              "listingId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "RemoveVerificationSchema": {
        "$ref": "#/definitions/RemoveVerificationSchema",
        "definitions": {
          "RemoveVerificationSchema": {
            "type": "object",
            "properties": {
              "verificationId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "verificationId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetListingVerificationsSchema": {
        "$ref": "#/definitions/GetListingVerificationsSchema",
        "definitions": {
          "GetListingVerificationsSchema": {
            "type": "object",
            "properties": {
              "listingId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "listingId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetMyVerificationsSchema": {
        "$ref": "#/definitions/GetMyVerificationsSchema",
        "definitions": {
          "GetMyVerificationsSchema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100
              },
              "page": {
                "type": "number",
                "minimum": 1
              }
            },
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetDevicesSchema": {
        "$ref": "#/definitions/GetDevicesSchema",
        "definitions": {
          "GetDevicesSchema": {
            "anyOf": [
              {
                "not": {}
              },
              {
                "type": "object",
                "properties": {
                  "search": {
                    "type": "string",
                    "description": "Search devices by name"
                  },
                  "brandId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Filter by brand ID"
                  },
                  "limit": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 1000,
                    "default": 50,
                    "description": "Number of results to return (1-1000)"
                  }
                },
                "additionalProperties": false
              }
            ],
            "description": "Get devices with optional filters"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetEmulatorsSchema": {
        "$ref": "#/definitions/GetEmulatorsSchema",
        "definitions": {
          "GetEmulatorsSchema": {
            "type": "object",
            "properties": {
              "systemId": {
                "type": "string",
                "format": "uuid"
              },
              "search": {
                "type": "string"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 50
              }
            },
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetEmulatorByIdSchema": {
        "$ref": "#/definitions/GetEmulatorByIdSchema",
        "definitions": {
          "GetEmulatorByIdSchema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetGamesSchema": {
        "$ref": "#/definitions/GetGamesSchema",
        "definitions": {
          "GetGamesSchema": {
            "anyOf": [
              {
                "not": {}
              },
              {
                "type": "object",
                "properties": {
                  "search": {
                    "type": "string"
                  },
                  "systemId": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "limit": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 50,
                    "default": 20
                  }
                },
                "additionalProperties": false
              }
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "SearchGamesSchema": {
        "$ref": "#/definitions/SearchGamesSchema",
        "definitions": {
          "SearchGamesSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetGameByIdSchema": {
        "$ref": "#/definitions/GetGameByIdSchema",
        "definitions": {
          "GetGameByIdSchema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "FindSwitchTitleIdMobileSchema": {
        "$ref": "#/definitions/FindSwitchTitleIdMobileSchema",
        "definitions": {
          "FindSwitchTitleIdMobileSchema": {
            "type": "object",
            "properties": {
              "gameName": {
                "type": "string",
                "minLength": 2
              },
              "maxResults": {
                "type": "number",
                "minimum": 1,
                "maximum": 20,
                "default": 5
              }
            },
            "required": [
              "gameName"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetBestSwitchTitleIdMobileSchema": {
        "$ref": "#/definitions/GetBestSwitchTitleIdMobileSchema",
        "definitions": {
          "GetBestSwitchTitleIdMobileSchema": {
            "type": "object",
            "properties": {
              "gameName": {
                "type": "string",
                "minLength": 2
              }
            },
            "required": [
              "gameName"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetSwitchGamesStatsMobileSchema": {
        "$ref": "#/definitions/GetSwitchGamesStatsMobileSchema",
        "definitions": {
          "GetSwitchGamesStatsMobileSchema": {
            "anyOf": [
              {
                "not": {}
              },
              {
                "type": "object",
                "properties": {},
                "additionalProperties": false
              }
            ]
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "SearchSuggestionsSchema": {
        "$ref": "#/definitions/SearchSuggestionsSchema",
        "definitions": {
          "SearchSuggestionsSchema": {
            "type": "object",
            "properties": {
              "query": {
                "type": "string",
                "minLength": 1
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 20,
                "default": 10
              }
            },
            "required": [
              "query"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetGpusSchema": {
        "$ref": "#/definitions/GetGpusSchema",
        "definitions": {
          "GetGpusSchema": {
            "type": "object",
            "properties": {
              "search": {
                "type": "string"
              },
              "brandId": {
                "type": "string",
                "format": "uuid"
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 100,
                "default": 50
              }
            },
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetListingsSchema": {
        "$ref": "#/definitions/GetListingsSchema",
        "definitions": {
          "GetListingsSchema": {
            "anyOf": [
              {
                "not": {}
              },
              {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "minimum": 1,
                    "default": 1,
                    "description": "Page number for pagination"
                  },
                  "limit": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 50,
                    "default": 20,
                    "description": "Number of results per page (1-50)"
                  },
                  "gameId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Filter by game ID"
                  },
                  "systemId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Filter by system ID"
                  },
                  "deviceId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Filter by device ID"
                  },
                  "emulatorIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "description": "Filter by emulator IDs"
                  },
                  "search": {
                    "type": "string",
                    "description": "Search listings by game name"
                  }
                },
                "additionalProperties": false
              }
            ],
            "description": "Get listings with optional filters and pagination"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetListingsByGameSchema": {
        "$ref": "#/definitions/GetListingsByGameSchema",
        "definitions": {
          "GetListingsByGameSchema": {
            "type": "object",
            "properties": {
              "gameId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "gameId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetListingByIdSchema": {
        "$ref": "#/definitions/GetListingByIdSchema",
        "definitions": {
          "GetListingByIdSchema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetUserListingsSchema": {
        "$ref": "#/definitions/GetUserListingsSchema",
        "definitions": {
          "GetUserListingsSchema": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "userId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "CreateListingSchema": {
        "$ref": "#/definitions/CreateListingSchema",
        "definitions": {
          "CreateListingSchema": {
            "type": "object",
            "properties": {
              "gameId": {
                "type": "string",
                "format": "uuid"
              },
              "deviceId": {
                "type": "string",
                "format": "uuid"
              },
              "emulatorId": {
                "type": "string",
                "format": "uuid"
              },
              "performanceId": {
                "type": "number"
              },
              "notes": {
                "type": "string"
              },
              "customFieldValues": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "customFieldDefinitionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "value": {}
                  },
                  "required": [
                    "customFieldDefinitionId"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "gameId",
              "deviceId",
              "emulatorId",
              "performanceId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "UpdateListingSchema": {
        "$ref": "#/definitions/UpdateListingSchema",
        "definitions": {
          "UpdateListingSchema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "gameId": {
                "type": "string",
                "format": "uuid"
              },
              "deviceId": {
                "type": "string",
                "format": "uuid"
              },
              "emulatorId": {
                "type": "string",
                "format": "uuid"
              },
              "performanceId": {
                "type": "number"
              },
              "notes": {
                "type": "string"
              },
              "customFieldValues": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "customFieldDefinitionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "value": {}
                  },
                  "required": [
                    "customFieldDefinitionId"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "DeleteListingSchema": {
        "$ref": "#/definitions/DeleteListingSchema",
        "definitions": {
          "DeleteListingSchema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "VoteListingSchema": {
        "$ref": "#/definitions/VoteListingSchema",
        "definitions": {
          "VoteListingSchema": {
            "type": "object",
            "properties": {
              "listingId": {
                "type": "string",
                "format": "uuid"
              },
              "value": {
                "type": "boolean"
              }
            },
            "required": [
              "listingId",
              "value"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetUserVoteSchema": {
        "$ref": "#/definitions/GetUserVoteSchema",
        "definitions": {
          "GetUserVoteSchema": {
            "type": "object",
            "properties": {
              "listingId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "listingId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetListingCommentsSchema": {
        "$ref": "#/definitions/GetListingCommentsSchema",
        "definitions": {
          "GetListingCommentsSchema": {
            "type": "object",
            "properties": {
              "listingId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "listingId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "CreateCommentSchema": {
        "$ref": "#/definitions/CreateCommentSchema",
        "definitions": {
          "CreateCommentSchema": {
            "type": "object",
            "properties": {
              "listingId": {
                "type": "string",
                "format": "uuid"
              },
              "content": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "listingId",
              "content"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "UpdateCommentSchema": {
        "$ref": "#/definitions/UpdateCommentSchema",
        "definitions": {
          "UpdateCommentSchema": {
            "type": "object",
            "properties": {
              "commentId": {
                "type": "string",
                "format": "uuid"
              },
              "content": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "commentId",
              "content"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "DeleteCommentSchema": {
        "$ref": "#/definitions/DeleteCommentSchema",
        "definitions": {
          "DeleteCommentSchema": {
            "type": "object",
            "properties": {
              "commentId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "commentId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetNotificationsSchema": {
        "$ref": "#/definitions/GetNotificationsSchema",
        "definitions": {
          "GetNotificationsSchema": {
            "anyOf": [
              {
                "not": {}
              },
              {
                "type": "object",
                "properties": {
                  "page": {
                    "type": "number",
                    "minimum": 1,
                    "default": 1,
                    "description": "Page number for pagination"
                  },
                  "limit": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 50,
                    "default": 20,
                    "description": "Number of results per page (1-50)"
                  },
                  "unreadOnly": {
                    "type": "boolean",
                    "default": false,
                    "description": "Show only unread notifications"
                  }
                },
                "additionalProperties": false
              }
            ],
            "description": "Get notifications with optional filters and pagination"
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "MarkNotificationReadSchema": {
        "$ref": "#/definitions/MarkNotificationReadSchema",
        "definitions": {
          "MarkNotificationReadSchema": {
            "type": "object",
            "properties": {
              "notificationId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "notificationId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetPcListingsSchema": {
        "$ref": "#/definitions/GetPcListingsSchema",
        "definitions": {
          "GetPcListingsSchema": {
            "type": "object",
            "properties": {
              "page": {
                "type": "number",
                "minimum": 1,
                "default": 1
              },
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 50,
                "default": 20
              },
              "gameId": {
                "type": "string",
                "format": "uuid"
              },
              "systemId": {
                "type": "string",
                "format": "uuid"
              },
              "cpuId": {
                "type": "string",
                "format": "uuid"
              },
              "gpuId": {
                "type": "string",
                "format": "uuid"
              },
              "emulatorId": {
                "type": "string",
                "format": "uuid"
              },
              "os": {
                "type": "string",
                "enum": [
                  "WINDOWS",
                  "LINUX",
                  "MACOS"
                ]
              },
              "search": {
                "type": "string"
              },
              "minMemory": {
                "type": "number",
                "minimum": 1,
                "maximum": 256
              },
              "maxMemory": {
                "type": "number",
                "minimum": 1,
                "maximum": 256
              }
            },
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "CreatePcListingSchema": {
        "$ref": "#/definitions/CreatePcListingSchema",
        "definitions": {
          "CreatePcListingSchema": {
            "type": "object",
            "properties": {
              "gameId": {
                "type": "string",
                "format": "uuid"
              },
              "cpuId": {
                "type": "string",
                "format": "uuid"
              },
              "gpuId": {
                "type": "string",
                "format": "uuid"
              },
              "emulatorId": {
                "type": "string",
                "format": "uuid"
              },
              "performanceId": {
                "type": "number"
              },
              "memorySize": {
                "type": "number",
                "minimum": 1,
                "maximum": 256
              },
              "os": {
                "type": "string",
                "enum": [
                  "WINDOWS",
                  "LINUX",
                  "MACOS"
                ]
              },
              "osVersion": {
                "type": "string",
                "minLength": 1
              },
              "notes": {
                "type": "string"
              },
              "customFieldValues": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "customFieldDefinitionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "value": {}
                  },
                  "required": [
                    "customFieldDefinitionId"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "gameId",
              "cpuId",
              "gpuId",
              "emulatorId",
              "performanceId",
              "memorySize",
              "os",
              "osVersion"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "UpdatePcListingSchema": {
        "$ref": "#/definitions/UpdatePcListingSchema",
        "definitions": {
          "UpdatePcListingSchema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "gameId": {
                "type": "string",
                "format": "uuid"
              },
              "cpuId": {
                "type": "string",
                "format": "uuid"
              },
              "gpuId": {
                "type": "string",
                "format": "uuid"
              },
              "emulatorId": {
                "type": "string",
                "format": "uuid"
              },
              "performanceId": {
                "type": "number"
              },
              "memorySize": {
                "type": "number",
                "minimum": 1,
                "maximum": 256
              },
              "os": {
                "type": "string",
                "enum": [
                  "WINDOWS",
                  "LINUX",
                  "MACOS"
                ]
              },
              "osVersion": {
                "type": "string",
                "minLength": 1
              },
              "notes": {
                "type": "string"
              },
              "customFieldValues": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "customFieldDefinitionId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "value": {}
                  },
                  "required": [
                    "customFieldDefinitionId"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetPcPresetsSchema": {
        "$ref": "#/definitions/GetPcPresetsSchema",
        "definitions": {
          "GetPcPresetsSchema": {
            "type": "object",
            "properties": {
              "limit": {
                "type": "number",
                "minimum": 1,
                "maximum": 50,
                "default": 20
              }
            },
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "CreatePcPresetSchema": {
        "$ref": "#/definitions/CreatePcPresetSchema",
        "definitions": {
          "CreatePcPresetSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "cpuId": {
                "type": "string",
                "format": "uuid"
              },
              "gpuId": {
                "type": "string",
                "format": "uuid"
              },
              "memorySize": {
                "type": "number",
                "minimum": 1,
                "maximum": 256
              },
              "os": {
                "type": "string",
                "enum": [
                  "WINDOWS",
                  "LINUX",
                  "MACOS"
                ]
              },
              "osVersion": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "name",
              "cpuId",
              "gpuId",
              "memorySize",
              "os",
              "osVersion"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "UpdatePcPresetSchema": {
        "$ref": "#/definitions/UpdatePcPresetSchema",
        "definitions": {
          "UpdatePcPresetSchema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 50
              },
              "cpuId": {
                "type": "string",
                "format": "uuid"
              },
              "gpuId": {
                "type": "string",
                "format": "uuid"
              },
              "memorySize": {
                "type": "number",
                "minimum": 1,
                "maximum": 256
              },
              "os": {
                "type": "string",
                "enum": [
                  "WINDOWS",
                  "LINUX",
                  "MACOS"
                ]
              },
              "osVersion": {
                "type": "string",
                "minLength": 1
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "DeletePcPresetSchema": {
        "$ref": "#/definitions/DeletePcPresetSchema",
        "definitions": {
          "DeletePcPresetSchema": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "UpdateUserPreferencesSchema": {
        "$ref": "#/definitions/UpdateUserPreferencesSchema",
        "definitions": {
          "UpdateUserPreferencesSchema": {
            "type": "object",
            "properties": {
              "defaultToUserDevices": {
                "type": "boolean"
              },
              "defaultToUserSocs": {
                "type": "boolean"
              },
              "notifyOnNewListings": {
                "type": "boolean"
              },
              "bio": {
                "type": "string"
              },
              "showNsfw": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "AddDevicePreferenceSchema": {
        "$ref": "#/definitions/AddDevicePreferenceSchema",
        "definitions": {
          "AddDevicePreferenceSchema": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "deviceId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "RemoveDevicePreferenceSchema": {
        "$ref": "#/definitions/RemoveDevicePreferenceSchema",
        "definitions": {
          "RemoveDevicePreferenceSchema": {
            "type": "object",
            "properties": {
              "deviceId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "deviceId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "BulkUpdateDevicePreferencesSchema": {
        "$ref": "#/definitions/BulkUpdateDevicePreferencesSchema",
        "definitions": {
          "BulkUpdateDevicePreferencesSchema": {
            "type": "object",
            "properties": {
              "deviceIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "deviceIds"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "BulkUpdateSocPreferencesSchema": {
        "$ref": "#/definitions/BulkUpdateSocPreferencesSchema",
        "definitions": {
          "BulkUpdateSocPreferencesSchema": {
            "type": "object",
            "properties": {
              "socIds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            "required": [
              "socIds"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "GetUserProfileSchema": {
        "$ref": "#/definitions/GetUserProfileSchema",
        "definitions": {
          "GetUserProfileSchema": {
            "type": "object",
            "properties": {
              "userId": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "userId"
            ],
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      },
      "UpdateProfileSchema": {
        "$ref": "#/definitions/UpdateProfileSchema",
        "definitions": {
          "UpdateProfileSchema": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "bio": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    }
  },
  "tags": [
    {
      "name": "auth",
      "description": "Auth related endpoints"
    },
    {
      "name": "cpus",
      "description": "Cpus related endpoints"
    },
    {
      "name": "customFieldDefinitions",
      "description": "CustomFieldDefinitions related endpoints"
    },
    {
      "name": "developers",
      "description": "Developers related endpoints"
    },
    {
      "name": "deviceBrands",
      "description": "DeviceBrands related endpoints"
    },
    {
      "name": "devices",
      "description": "Devices related endpoints"
    },
    {
      "name": "emulators",
      "description": "Emulators related endpoints"
    },
    {
      "name": "games",
      "description": "Games related endpoints"
    },
    {
      "name": "general",
      "description": "General related endpoints"
    },
    {
      "name": "gpus",
      "description": "Gpus related endpoints"
    },
    {
      "name": "listingReports",
      "description": "ListingReports related endpoints"
    },
    {
      "name": "listings",
      "description": "Listings related endpoints"
    },
    {
      "name": "notifications",
      "description": "Notifications related endpoints"
    },
    {
      "name": "pcListings",
      "description": "PcListings related endpoints"
    },
    {
      "name": "preferences",
      "description": "Preferences related endpoints"
    },
    {
      "name": "rawg",
      "description": "Rawg related endpoints"
    },
    {
      "name": "socs",
      "description": "Socs related endpoints"
    },
    {
      "name": "tgdb",
      "description": "Tgdb related endpoints"
    },
    {
      "name": "trust",
      "description": "Trust related endpoints"
    },
    {
      "name": "users",
      "description": "Users related endpoints"
    }
  ],
  "paths": {
    "/api/mobile/trpc/auth.validateToken": {
      "get": {
        "summary": "Validate JWT token",
        "description": "Validate JWT token",
        "tags": [
          "auth"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching ValidateTokenSchema schema. See components/schemas/ValidateTokenSchema for structure.",
            "example": "{\"json\":{\"token\":\"example\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from auth.validateToken"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from auth.validateToken",
                          "data": {
                            "id": "uuid-user",
                            "email": "user@example.com",
                            "name": "John Doe"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "auth.validateToken",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/auth.refreshToken": {
      "post": {
        "summary": "Refresh token",
        "description": "Refresh token",
        "tags": [
          "auth"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenSchema"
              },
              "example": {
                "refreshToken": "example"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from auth.refreshToken"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from auth.refreshToken",
                          "data": {
                            "id": "uuid-user",
                            "email": "user@example.com",
                            "name": "John Doe"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "auth.refreshToken",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/auth.verifyEmail": {
      "post": {
        "summary": "Verify email with code",
        "description": "Verify email with code",
        "tags": [
          "auth"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyEmailSchema"
              },
              "example": {
                "code": "example",
                "clerkUserId": "example"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from auth.verifyEmail"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from auth.verifyEmail",
                          "data": {
                            "id": "uuid-user",
                            "email": "user@example.com",
                            "name": "John Doe"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "auth.verifyEmail",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/auth.updateProfile": {
      "post": {
        "summary": "Update mobile profile",
        "description": "Update mobile profile",
        "tags": [
          "auth"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMobileProfileSchema"
              },
              "example": {}
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from auth.updateProfile"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from auth.updateProfile",
                          "data": {
                            "id": "uuid-user",
                            "email": "user@example.com",
                            "name": "John Doe"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "auth.updateProfile",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/auth.deleteAccount": {
      "post": {
        "summary": "Delete account",
        "description": "Delete account",
        "tags": [
          "auth"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMobileAccountSchema"
              },
              "example": {
                "confirmationText": "example"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from auth.deleteAccount"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from auth.deleteAccount",
                          "data": {
                            "id": "uuid-user",
                            "email": "user@example.com",
                            "name": "John Doe"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "auth.deleteAccount",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/cpus.get": {
      "get": {
        "summary": "Get CPUs with search, filtering, and pagination",
        "description": "Get CPUs with search, filtering, and pagination",
        "tags": [
          "cpus"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetCpusSchema schema. See components/schemas/GetCpusSchema for structure.",
            "example": "{\"json\":{\"search\":\"mario\",\"limit\":10}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from cpus.get"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from cpus.get",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "cpus.get",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/cpus.getById": {
      "get": {
        "summary": "Get CPU by ID",
        "description": "Get CPU by ID",
        "tags": [
          "cpus"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from cpus.getById"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "id": "uuid-generic",
                          "name": "Generic Item"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "cpus.getById",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/customFieldDefinitions.getByEmulator": {
      "get": {
        "summary": "Get custom field definitions by emulator (for mobile listing creation)",
        "description": "Get custom field definitions by emulator (for mobile listing creation)",
        "tags": [
          "customFieldDefinitions"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from customFieldDefinitions.getByEmulator"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from customFieldDefinitions.getByEmulator",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "customFieldDefinitions.getByEmulator",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/developers.getMyVerifiedEmulators": {
      "get": {
        "summary": "Get current user's verified emulators",
        "description": "Get current user's verified emulators",
        "tags": [
          "developers"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from developers.getMyVerifiedEmulators"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from developers.getMyVerifiedEmulators",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "developers.getMyVerifiedEmulators",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/developers.isVerifiedDeveloper": {
      "get": {
        "summary": "Check if a user is a verified developer for an emulator",
        "description": "Check if a user is a verified developer for an emulator",
        "tags": [
          "developers"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching IsVerifiedDeveloperSchema schema. See components/schemas/IsVerifiedDeveloperSchema for structure.",
            "example": "{\"json\":{\"userId\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\"emulatorId\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from developers.isVerifiedDeveloper"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from developers.isVerifiedDeveloper",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "developers.isVerifiedDeveloper",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/developers.verifyListing": {
      "post": {
        "summary": "Verify a listing as a developer",
        "description": "Verify a listing as a developer",
        "tags": [
          "developers"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyListingSchema"
              },
              "example": {
                "listingId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from developers.verifyListing"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from developers.verifyListing",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "developers.verifyListing",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/developers.removeVerification": {
      "post": {
        "summary": "Remove a verification",
        "description": "Remove a verification",
        "tags": [
          "developers"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveVerificationSchema"
              },
              "example": {
                "verificationId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from developers.removeVerification"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from developers.removeVerification",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "developers.removeVerification",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/developers.getListingVerifications": {
      "get": {
        "summary": "Get verifications for a listing",
        "description": "Get verifications for a listing",
        "tags": [
          "developers"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetListingVerificationsSchema schema. See components/schemas/GetListingVerificationsSchema for structure.",
            "example": "{\"json\":{\"listingId\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from developers.getListingVerifications"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from developers.getListingVerifications",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "developers.getListingVerifications",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/developers.getMyVerifications": {
      "get": {
        "summary": "Get current user's verifications",
        "description": "Get current user's verifications",
        "tags": [
          "developers"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetMyVerificationsSchema schema. See components/schemas/GetMyVerificationsSchema for structure.",
            "example": "{\"json\":{\"limit\":10,\"page\":1}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from developers.getMyVerifications"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from developers.getMyVerifications",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "developers.getMyVerifications",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/deviceBrands.get": {
      "get": {
        "summary": "Get device brands with search and sorting",
        "description": "Get device brands with search and sorting",
        "tags": [
          "deviceBrands"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from deviceBrands.get"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from deviceBrands.get",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "deviceBrands.get",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/deviceBrands.getById": {
      "get": {
        "summary": "Get device brand by ID",
        "description": "Get device brand by ID",
        "tags": [
          "deviceBrands"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from deviceBrands.getById"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "id": "uuid-generic",
                          "name": "Generic Item"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "deviceBrands.getById",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/devices.getDevices": {
      "get": {
        "summary": "Get devices with search and filtering",
        "description": "Get devices with search and filtering",
        "tags": [
          "devices"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetDevicesSchema schema. See components/schemas/GetDevicesSchema for structure.",
            "example": "{\"json\":{}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from devices.getDevices"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from devices.getDevices",
                          "data": {
                            "id": "uuid-device",
                            "brandId": "uuid-brand",
                            "modelName": "Steam Deck",
                            "socId": "uuid-soc"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "devices.getDevices",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/devices.getDeviceBrands": {
      "get": {
        "summary": "Get device brands",
        "description": "Get device brands",
        "tags": [
          "devices"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from devices.getDeviceBrands"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from devices.getDeviceBrands",
                          "data": {
                            "id": "uuid-device",
                            "brandId": "uuid-brand",
                            "modelName": "Steam Deck",
                            "socId": "uuid-soc"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "devices.getDeviceBrands",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/devices.getSocs": {
      "get": {
        "summary": "Get SOCs (System on Chips)",
        "description": "Get SOCs (System on Chips)",
        "tags": [
          "devices"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from devices.getSocs"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from devices.getSocs",
                          "data": {
                            "id": "uuid-device",
                            "brandId": "uuid-brand",
                            "modelName": "Steam Deck",
                            "socId": "uuid-soc"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "devices.getSocs",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/emulators.getEmulators": {
      "get": {
        "summary": "Get emulators with search and filtering",
        "description": "Get emulators with search and filtering",
        "tags": [
          "emulators"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetEmulatorsSchema schema. See components/schemas/GetEmulatorsSchema for structure.",
            "example": "{\"json\":{\"search\":\"mario\",\"limit\":10}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from emulators.getEmulators"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from emulators.getEmulators",
                          "data": {
                            "id": "uuid-emulator",
                            "name": "RetroArch",
                            "logo": "retroarch.png"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "emulators.getEmulators",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/emulators.getEmulatorById": {
      "get": {
        "summary": "Get emulator by ID",
        "description": "Get emulator by ID",
        "tags": [
          "emulators"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetEmulatorByIdSchema schema. See components/schemas/GetEmulatorByIdSchema for structure.",
            "example": "{\"json\":{\"id\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from emulators.getEmulatorById"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "id": "uuid-emulator",
                          "name": "RetroArch",
                          "logo": "retroarch.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "emulators.getEmulatorById",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/games.getGames": {
      "get": {
        "summary": "Get games with search and filtering",
        "description": "Get games with search and filtering",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetGamesSchema schema. See components/schemas/GetGamesSchema for structure.",
            "example": "{\"json\":{}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from games.getGames"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": [
                          {
                            "id": "uuid-game",
                            "title": "Super Mario Bros",
                            "systemId": "uuid-system",
                            "imageUrl": "https://example.com/game.jpg",
                            "status": "APPROVED",
                            "system": {
                              "id": "uuid-system",
                              "name": "Nintendo Entertainment System",
                              "key": "nes"
                            },
                            "_count": {
                              "listings": 45
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "games.getGames",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/games.getPopularGames": {
      "get": {
        "summary": "Get popular games",
        "description": "Get popular games",
        "tags": [
          "games"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from games.getPopularGames"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": [
                          {
                            "id": "uuid-game",
                            "title": "Super Mario Bros",
                            "systemId": "uuid-system",
                            "imageUrl": "https://example.com/game.jpg",
                            "status": "APPROVED",
                            "system": {
                              "id": "uuid-system",
                              "name": "Nintendo Entertainment System",
                              "key": "nes"
                            },
                            "_count": {
                              "listings": 45
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "games.getPopularGames",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/games.searchGames": {
      "get": {
        "summary": "Search games",
        "description": "Search games",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching SearchGamesSchema schema. See components/schemas/SearchGamesSchema for structure.",
            "example": "{\"json\":{\"query\":\"example\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from games.searchGames"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from games.searchGames",
                          "data": {
                            "id": "uuid-game",
                            "title": "Super Mario Bros",
                            "systemId": "uuid-system",
                            "imageUrl": "https://example.com/game.jpg",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "games.searchGames",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/games.getGameById": {
      "get": {
        "summary": "Get game by ID",
        "description": "Get game by ID",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetGameByIdSchema schema. See components/schemas/GetGameByIdSchema for structure.",
            "example": "{\"json\":{\"id\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from games.getGameById"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "id": "uuid-game",
                          "title": "Super Mario Bros",
                          "systemId": "uuid-system",
                          "imageUrl": "https://example.com/game.jpg",
                          "status": "APPROVED",
                          "system": {
                            "id": "uuid-system",
                            "name": "Nintendo Entertainment System",
                            "key": "nes"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "games.getGameById",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/games.findSwitchTitleId": {
      "get": {
        "summary": "Find Nintendo Switch title IDs by game name (fuzzy search)",
        "description": "Find Nintendo Switch title IDs by game name (fuzzy search)",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching FindSwitchTitleIdMobileSchema schema. See components/schemas/FindSwitchTitleIdMobileSchema for structure.",
            "example": "{\"json\":{\"gameName\":\"example\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from games.findSwitchTitleId"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from games.findSwitchTitleId",
                          "data": {
                            "id": "uuid-game",
                            "title": "Super Mario Bros",
                            "systemId": "uuid-system",
                            "imageUrl": "https://example.com/game.jpg",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "games.findSwitchTitleId",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/games.getBestSwitchTitleId": {
      "get": {
        "summary": "Get the best matching Nintendo Switch title ID for a game name",
        "description": "Get the best matching Nintendo Switch title ID for a game name",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetBestSwitchTitleIdMobileSchema schema. See components/schemas/GetBestSwitchTitleIdMobileSchema for structure.",
            "example": "{\"json\":{\"gameName\":\"example\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from games.getBestSwitchTitleId"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": [
                          {
                            "id": "uuid-game",
                            "title": "Super Mario Bros",
                            "systemId": "uuid-system",
                            "imageUrl": "https://example.com/game.jpg",
                            "status": "APPROVED",
                            "system": {
                              "id": "uuid-system",
                              "name": "Nintendo Entertainment System",
                              "key": "nes"
                            },
                            "_count": {
                              "listings": 45
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "games.getBestSwitchTitleId",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/games.getSwitchGamesStats": {
      "get": {
        "summary": "Get Nintendo Switch games cache statistics",
        "description": "Get Nintendo Switch games cache statistics",
        "tags": [
          "games"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetSwitchGamesStatsMobileSchema schema. See components/schemas/GetSwitchGamesStatsMobileSchema for structure.",
            "example": "{\"json\":{}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from games.getSwitchGamesStats"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": [
                          {
                            "id": "uuid-game",
                            "title": "Super Mario Bros",
                            "systemId": "uuid-system",
                            "imageUrl": "https://example.com/game.jpg",
                            "status": "APPROVED",
                            "system": {
                              "id": "uuid-system",
                              "name": "Nintendo Entertainment System",
                              "key": "nes"
                            },
                            "_count": {
                              "listings": 45
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "games.getSwitchGamesStats",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/general.getAppStats": {
      "get": {
        "summary": "Get app statistics",
        "description": "Get app statistics",
        "tags": [
          "general"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from general.getAppStats"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from general.getAppStats",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "general.getAppStats",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/general.getSystems": {
      "get": {
        "summary": "Get all systems",
        "description": "Get all systems",
        "tags": [
          "general"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from general.getSystems"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from general.getSystems",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "general.getSystems",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/general.getPerformanceScales": {
      "get": {
        "summary": "Get performance scales",
        "description": "Get performance scales",
        "tags": [
          "general"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from general.getPerformanceScales"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from general.getPerformanceScales",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "general.getPerformanceScales",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/general.getSearchSuggestions": {
      "get": {
        "summary": "Get search suggestions",
        "description": "Get search suggestions",
        "tags": [
          "general"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching SearchSuggestionsSchema schema. See components/schemas/SearchSuggestionsSchema for structure.",
            "example": "{\"json\":{\"query\":\"example\",\"limit\":10}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from general.getSearchSuggestions"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from general.getSearchSuggestions",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "general.getSearchSuggestions",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/general.getTrustLevels": {
      "get": {
        "summary": "Get trust levels (for mobile trust system integration)",
        "description": "Get trust levels (for mobile trust system integration)",
        "tags": [
          "general"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from general.getTrustLevels"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from general.getTrustLevels",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "general.getTrustLevels",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/gpus.get": {
      "get": {
        "summary": "Get GPUs with search, filtering, and pagination",
        "description": "Get GPUs with search, filtering, and pagination",
        "tags": [
          "gpus"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetGpusSchema schema. See components/schemas/GetGpusSchema for structure.",
            "example": "{\"json\":{\"search\":\"mario\",\"limit\":10}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from gpus.get"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from gpus.get",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "gpus.get",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/gpus.getById": {
      "get": {
        "summary": "Get GPU by ID",
        "description": "Get GPU by ID",
        "tags": [
          "gpus"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from gpus.getById"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "id": "uuid-generic",
                          "name": "Generic Item"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "gpus.getById",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/listingReports.create": {
      "post": {
        "summary": "Create a new listing report (user-facing)",
        "description": "Create a new listing report (user-facing)",
        "tags": [
          "listingReports"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listingReports.create"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listingReports.create",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listingReports.create",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/listingReports.checkUserHasReports": {
      "get": {
        "summary": "Check if a user has reports (for showing warnings)",
        "description": "Check if a user has reports (for showing warnings)",
        "tags": [
          "listingReports"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listingReports.checkUserHasReports"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listingReports.checkUserHasReports",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listingReports.checkUserHasReports",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/listings.getListings": {
      "get": {
        "summary": "Get listings with pagination and filtering",
        "description": "Get listings with pagination and filtering",
        "tags": [
          "listings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetListingsSchema schema. See components/schemas/GetListingsSchema for structure.",
            "example": "{\"json\":{}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.getListings"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "listingss": [
                            {
                              "id": "uuid-listing",
                              "gameId": "uuid-game",
                              "deviceId": "uuid-device",
                              "emulatorId": "uuid-emulator",
                              "performanceId": 1,
                              "notes": "Runs perfectly at 60fps",
                              "status": "APPROVED",
                              "game": {
                                "id": "uuid-game",
                                "title": "Super Mario Bros"
                              },
                              "device": {
                                "id": "uuid-device",
                                "modelName": "Steam Deck",
                                "brand": {
                                  "name": "Valve"
                                }
                              },
                              "emulator": {
                                "id": "uuid-emulator",
                                "name": "RetroArch"
                              },
                              "performance": {
                                "id": 1,
                                "label": "Perfect",
                                "rank": 1
                              },
                              "author": {
                                "id": "uuid-user",
                                "name": "GameTester"
                              },
                              "_count": {
                                "votes": 12,
                                "comments": 3
                              }
                            }
                          ],
                          "pagination": {
                            "total": 156,
                            "pages": 8,
                            "currentPage": 1,
                            "limit": 20,
                            "hasNextPage": true,
                            "hasPreviousPage": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.getListings",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/listings.getFeaturedListings": {
      "get": {
        "summary": "Get featured listings",
        "description": "Get featured listings",
        "tags": [
          "listings"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.getFeaturedListings"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.getFeaturedListings",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.getFeaturedListings",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/listings.getListingsByGame": {
      "get": {
        "summary": "Get listings by game",
        "description": "Get listings by game",
        "tags": [
          "listings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetListingsByGameSchema schema. See components/schemas/GetListingsByGameSchema for structure.",
            "example": "{\"json\":{\"gameId\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.getListingsByGame"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.getListingsByGame",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.getListingsByGame",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/listings.getListingById": {
      "get": {
        "summary": "Get listing by ID",
        "description": "Get listing by ID",
        "tags": [
          "listings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetListingByIdSchema schema. See components/schemas/GetListingByIdSchema for structure.",
            "example": "{\"json\":{\"id\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.getListingById"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "id": "uuid-listing",
                          "gameId": "uuid-game",
                          "deviceId": "uuid-device",
                          "emulatorId": "uuid-emulator",
                          "performanceId": 1,
                          "notes": "Runs perfectly at 60fps",
                          "status": "APPROVED",
                          "game": {
                            "id": "uuid-game",
                            "title": "Super Mario Bros"
                          },
                          "device": {
                            "id": "uuid-device",
                            "modelName": "Steam Deck",
                            "brand": {
                              "name": "Valve"
                            }
                          },
                          "emulator": {
                            "id": "uuid-emulator",
                            "name": "RetroArch"
                          },
                          "performance": {
                            "id": 1,
                            "label": "Perfect",
                            "rank": 1
                          },
                          "author": {
                            "id": "uuid-user",
                            "name": "GameTester"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.getListingById",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/listings.getUserListings": {
      "get": {
        "summary": "Get user listings",
        "description": "Get user listings",
        "tags": [
          "listings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetUserListingsSchema schema. See components/schemas/GetUserListingsSchema for structure.",
            "example": "{\"json\":{\"userId\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.getUserListings"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.getUserListings",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.getUserListings",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/listings.createListing": {
      "post": {
        "summary": "Create a new listing",
        "description": "Create a new listing",
        "tags": [
          "listings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListingSchema"
              },
              "example": {
                "gameId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "deviceId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "emulatorId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "performanceId": 1
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.createListing"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.createListing",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.createListing",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/listings.updateListing": {
      "post": {
        "summary": "Update a listing",
        "description": "Update a listing",
        "tags": [
          "listings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateListingSchema"
              },
              "example": {
                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.updateListing"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.updateListing",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.updateListing",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/listings.deleteListing": {
      "post": {
        "summary": "Delete a listing",
        "description": "Delete a listing",
        "tags": [
          "listings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteListingSchema"
              },
              "example": {
                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.deleteListing"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.deleteListing",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.deleteListing",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/listings.voteListing": {
      "post": {
        "summary": "Vote on a listing",
        "description": "Vote on a listing",
        "tags": [
          "listings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VoteListingSchema"
              },
              "example": {
                "listingId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "value": false
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.voteListing"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.voteListing",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.voteListing",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/listings.getUserVote": {
      "get": {
        "summary": "Get user's vote on a listing",
        "description": "Get user's vote on a listing",
        "tags": [
          "listings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetUserVoteSchema schema. See components/schemas/GetUserVoteSchema for structure.",
            "example": "{\"json\":{\"listingId\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.getUserVote"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.getUserVote",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.getUserVote",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/listings.getListingComments": {
      "get": {
        "summary": "Get listing comments",
        "description": "Get listing comments",
        "tags": [
          "listings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetListingCommentsSchema schema. See components/schemas/GetListingCommentsSchema for structure.",
            "example": "{\"json\":{\"listingId\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.getListingComments"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.getListingComments",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.getListingComments",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/listings.createComment": {
      "post": {
        "summary": "Create a comment",
        "description": "Create a comment",
        "tags": [
          "listings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentSchema"
              },
              "example": {
                "listingId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "content": "example"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.createComment"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.createComment",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.createComment",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/listings.updateComment": {
      "post": {
        "summary": "Update a comment",
        "description": "Update a comment",
        "tags": [
          "listings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentSchema"
              },
              "example": {
                "commentId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "content": "example"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.updateComment"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.updateComment",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.updateComment",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/listings.deleteComment": {
      "post": {
        "summary": "Delete a comment",
        "description": "Delete a comment",
        "tags": [
          "listings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCommentSchema"
              },
              "example": {
                "commentId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from listings.deleteComment"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from listings.deleteComment",
                          "data": {
                            "id": "uuid-listing",
                            "gameId": "uuid-game",
                            "deviceId": "uuid-device",
                            "emulatorId": "uuid-emulator",
                            "performanceId": 1,
                            "notes": "Runs perfectly at 60fps",
                            "status": "APPROVED"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "listings.deleteComment",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/notifications.getNotifications": {
      "get": {
        "summary": "Get notifications with pagination",
        "description": "Get notifications with pagination",
        "tags": [
          "notifications"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetNotificationsSchema schema. See components/schemas/GetNotificationsSchema for structure.",
            "example": "{\"json\":{}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from notifications.getNotifications"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from notifications.getNotifications",
                          "data": {
                            "id": "uuid-notification",
                            "type": "LISTING_APPROVED",
                            "message": "Your listing has been approved",
                            "isRead": false,
                            "createdAt": "2025-07-12T10:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "notifications.getNotifications",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/notifications.getUnreadNotificationCount": {
      "get": {
        "summary": "Get unread notification count",
        "description": "Get unread notification count",
        "tags": [
          "notifications"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from notifications.getUnreadNotificationCount"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from notifications.getUnreadNotificationCount",
                          "data": {
                            "id": "uuid-notification",
                            "type": "LISTING_APPROVED",
                            "message": "Your listing has been approved",
                            "isRead": false,
                            "createdAt": "2025-07-12T10:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "notifications.getUnreadNotificationCount",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/notifications.markNotificationAsRead": {
      "post": {
        "summary": "Mark notification as read",
        "description": "Mark notification as read",
        "tags": [
          "notifications"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkNotificationReadSchema"
              },
              "example": {
                "notificationId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from notifications.markNotificationAsRead"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from notifications.markNotificationAsRead",
                          "data": {
                            "id": "uuid-notification",
                            "type": "LISTING_APPROVED",
                            "message": "Your listing has been approved",
                            "isRead": false,
                            "createdAt": "2025-07-12T10:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "notifications.markNotificationAsRead",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/notifications.markAllNotificationsAsRead": {
      "post": {
        "summary": "Mark all notifications as read",
        "description": "Mark all notifications as read",
        "tags": [
          "notifications"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from notifications.markAllNotificationsAsRead"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from notifications.markAllNotificationsAsRead",
                          "data": {
                            "id": "uuid-notification",
                            "type": "LISTING_APPROVED",
                            "message": "Your listing has been approved",
                            "isRead": false,
                            "createdAt": "2025-07-12T10:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "notifications.markAllNotificationsAsRead",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/pcListings.getPcListings": {
      "get": {
        "summary": "Get PC listings with pagination and filtering",
        "description": "Get PC listings with pagination and filtering",
        "tags": [
          "pcListings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetPcListingsSchema schema. See components/schemas/GetPcListingsSchema for structure.",
            "example": "{\"json\":{\"page\":1,\"limit\":10,\"search\":\"mario\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from pcListings.getPcListings"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from pcListings.getPcListings",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "pcListings.getPcListings",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/pcListings.createPcListing": {
      "post": {
        "summary": "Create a new PC listing",
        "description": "Create a new PC listing",
        "tags": [
          "pcListings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePcListingSchema"
              },
              "example": {
                "gameId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "cpuId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "gpuId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "emulatorId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "performanceId": 1,
                "memorySize": 1,
                "os": "example",
                "osVersion": "example"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from pcListings.createPcListing"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from pcListings.createPcListing",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "pcListings.createPcListing",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/pcListings.updatePcListing": {
      "post": {
        "summary": "Update a PC listing",
        "description": "Update a PC listing",
        "tags": [
          "pcListings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePcListingSchema"
              },
              "example": {
                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from pcListings.updatePcListing"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from pcListings.updatePcListing",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "pcListings.updatePcListing",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/pcListings.getCpus": {
      "get": {
        "summary": "Get CPUs for mobile",
        "description": "Get CPUs for mobile",
        "tags": [
          "pcListings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetCpusSchema schema. See components/schemas/GetCpusSchema for structure.",
            "example": "{\"json\":{\"search\":\"mario\",\"limit\":10}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from pcListings.getCpus"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from pcListings.getCpus",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "pcListings.getCpus",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/pcListings.getGpus": {
      "get": {
        "summary": "Get GPUs for mobile",
        "description": "Get GPUs for mobile",
        "tags": [
          "pcListings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetGpusSchema schema. See components/schemas/GetGpusSchema for structure.",
            "example": "{\"json\":{\"search\":\"mario\",\"limit\":10}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from pcListings.getGpus"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from pcListings.getGpus",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "pcListings.getGpus",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/pcListings.get": {
      "get": {
        "summary": "PC Presets nested router",
        "description": "PC Presets nested router",
        "tags": [
          "pcListings"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetPcPresetsSchema schema. See components/schemas/GetPcPresetsSchema for structure.",
            "example": "{\"json\":{\"limit\":10}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from pcListings.get"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from pcListings.get",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "pcListings.get",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/pcListings.create": {
      "post": {
        "summary": "PC Presets nested router",
        "description": "PC Presets nested router",
        "tags": [
          "pcListings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePcPresetSchema"
              },
              "example": {
                "name": "example",
                "cpuId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "gpuId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
                "memorySize": 1,
                "os": "example",
                "osVersion": "example"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from pcListings.create"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "id": "uuid-generic",
                          "message": "Created successfully",
                          "name": "Generic Item"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "pcListings.create",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/pcListings.update": {
      "post": {
        "summary": "PC Presets nested router",
        "description": "PC Presets nested router",
        "tags": [
          "pcListings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePcPresetSchema"
              },
              "example": {
                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from pcListings.update"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from pcListings.update",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "pcListings.update",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/pcListings.delete": {
      "post": {
        "summary": "PC Presets nested router",
        "description": "PC Presets nested router",
        "tags": [
          "pcListings"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeletePcPresetSchema"
              },
              "example": {
                "id": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from pcListings.delete"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from pcListings.delete",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "pcListings.delete",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/preferences.getUserPreferences": {
      "get": {
        "summary": "Get user preferences",
        "description": "Get user preferences",
        "tags": [
          "preferences"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from preferences.getUserPreferences"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from preferences.getUserPreferences",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "preferences.getUserPreferences",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/preferences.updateUserPreferences": {
      "post": {
        "summary": "Update user preferences",
        "description": "Update user preferences",
        "tags": [
          "preferences"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPreferencesSchema"
              },
              "example": {}
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from preferences.updateUserPreferences"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from preferences.updateUserPreferences",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "preferences.updateUserPreferences",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/preferences.addDevicePreference": {
      "post": {
        "summary": "Add device preference",
        "description": "Add device preference",
        "tags": [
          "preferences"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDevicePreferenceSchema"
              },
              "example": {
                "deviceId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from preferences.addDevicePreference"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from preferences.addDevicePreference",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "preferences.addDevicePreference",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/preferences.removeDevicePreference": {
      "post": {
        "summary": "Remove device preference",
        "description": "Remove device preference",
        "tags": [
          "preferences"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveDevicePreferenceSchema"
              },
              "example": {
                "deviceId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
              }
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from preferences.removeDevicePreference"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from preferences.removeDevicePreference",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "preferences.removeDevicePreference",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/preferences.bulkUpdateDevicePreferences": {
      "post": {
        "summary": "Bulk update device preferences",
        "description": "Bulk update device preferences",
        "tags": [
          "preferences"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateDevicePreferencesSchema"
              },
              "example": {}
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from preferences.bulkUpdateDevicePreferences"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from preferences.bulkUpdateDevicePreferences",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "preferences.bulkUpdateDevicePreferences",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/preferences.bulkUpdateSocPreferences": {
      "post": {
        "summary": "Bulk update SOC preferences",
        "description": "Bulk update SOC preferences",
        "tags": [
          "preferences"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkUpdateSocPreferencesSchema"
              },
              "example": {}
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from preferences.bulkUpdateSocPreferences"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from preferences.bulkUpdateSocPreferences",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "preferences.bulkUpdateSocPreferences",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/preferences.getUserProfile": {
      "get": {
        "summary": "Get user profile",
        "description": "Get user profile",
        "tags": [
          "preferences"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching GetUserProfileSchema schema. See components/schemas/GetUserProfileSchema for structure.",
            "example": "{\"json\":{\"userId\":\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from preferences.getUserProfile"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from preferences.getUserProfile",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "preferences.getUserProfile",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/preferences.updateProfile": {
      "post": {
        "summary": "Update profile",
        "description": "Update profile",
        "tags": [
          "preferences"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileSchema"
              },
              "example": {}
            }
          },
          "description": "Input data for mutation procedure."
        },
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from preferences.updateProfile"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from preferences.updateProfile",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "preferences.updateProfile",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/rawg.searchGameImages": {
      "get": {
        "summary": "Search for game images in RAWG database",
        "description": "Search for game images in RAWG database",
        "tags": [
          "rawg"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from rawg.searchGameImages"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from rawg.searchGameImages",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "rawg.searchGameImages",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/rawg.searchGames": {
      "get": {
        "summary": "Search for games in RAWG database",
        "description": "Search for games in RAWG database",
        "tags": [
          "rawg"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching SearchGamesSchema schema. See components/schemas/SearchGamesSchema for structure.",
            "example": "{\"json\":{\"query\":\"example\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from rawg.searchGames"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from rawg.searchGames",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "rawg.searchGames",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/rawg.getGameImages": {
      "get": {
        "summary": "Get game images by ID",
        "description": "Get game images by ID",
        "tags": [
          "rawg"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from rawg.getGameImages"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from rawg.getGameImages",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "rawg.getGameImages",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/socs.get": {
      "get": {
        "summary": "Get SoCs with search, filtering, and pagination",
        "description": "Get SoCs with search, filtering, and pagination",
        "tags": [
          "socs"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from socs.get"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from socs.get",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "socs.get",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/socs.getById": {
      "get": {
        "summary": "Get SoC by ID",
        "description": "Get SoC by ID",
        "tags": [
          "socs"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from socs.getById"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "id": "uuid-generic",
                          "name": "Generic Item"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "socs.getById",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/tgdb.searchGameImages": {
      "get": {
        "summary": "Search for game images in TGDB database",
        "description": "Search for game images in TGDB database",
        "tags": [
          "tgdb"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from tgdb.searchGameImages"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from tgdb.searchGameImages",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "tgdb.searchGameImages",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/tgdb.searchGames": {
      "get": {
        "summary": "Search for games in TGDB database",
        "description": "Search for games in TGDB database",
        "tags": [
          "tgdb"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "SuperJSON wrapped input object"
            },
            "description": "SuperJSON wrapped input matching SearchGamesSchema schema. See components/schemas/SearchGamesSchema for structure.",
            "example": "{\"json\":{\"query\":\"example\"}}"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from tgdb.searchGames"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from tgdb.searchGames",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "tgdb.searchGames",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/tgdb.getGameImageUrls": {
      "get": {
        "summary": "Get game image URLs for a specific game",
        "description": "Get game image URLs for a specific game",
        "tags": [
          "tgdb"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from tgdb.getGameImageUrls"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from tgdb.getGameImageUrls",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "tgdb.getGameImageUrls",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/tgdb.getGameImages": {
      "get": {
        "summary": "Get game images by game IDs",
        "description": "Get game images by game IDs",
        "tags": [
          "tgdb"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from tgdb.getGameImages"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from tgdb.getGameImages",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "tgdb.getGameImages",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/tgdb.getPlatforms": {
      "get": {
        "summary": "Get available platforms from TGDB",
        "description": "Get available platforms from TGDB",
        "tags": [
          "tgdb"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from tgdb.getPlatforms"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from tgdb.getPlatforms",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "tgdb.getPlatforms",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/trust.getMyTrustInfo": {
      "get": {
        "summary": "Get current user's trust score and level",
        "description": "Get current user's trust score and level",
        "tags": [
          "trust"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from trust.getMyTrustInfo"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from trust.getMyTrustInfo",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "trust.getMyTrustInfo",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": [
          {
            "ClerkAuth": []
          }
        ]
      }
    },
    "/api/mobile/trpc/trust.getUserTrustInfo": {
      "get": {
        "summary": "Get trust info for a specific user (public)",
        "description": "Get trust info for a specific user (public)",
        "tags": [
          "trust"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from trust.getUserTrustInfo"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from trust.getUserTrustInfo",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "trust.getUserTrustInfo",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/trust.getTrustLevels": {
      "get": {
        "summary": "Get trust levels configuration",
        "description": "Get trust levels configuration",
        "tags": [
          "trust"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from trust.getTrustLevels"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "message": "Response from trust.getTrustLevels",
                          "data": {
                            "id": "uuid-generic",
                            "name": "Generic Item"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "trust.getTrustLevels",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/api/mobile/trpc/users.getUserById": {
      "get": {
        "summary": "Get user profile by ID (public user profiles)",
        "description": "Get user profile by ID (public user profiles)",
        "tags": [
          "users"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful tRPC response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "object",
                      "description": "tRPC result wrapper containing the actual response data",
                      "properties": {
                        "data": {
                          "type": "object",
                          "description": "Response data from users.getUserById"
                        }
                      }
                    }
                  },
                  "required": [
                    "result"
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Successful response",
                    "value": {
                      "result": {
                        "data": {
                          "id": "uuid-generic",
                          "name": "Generic Item"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Invalid input parameters or malformed JSON",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                },
                "examples": {
                  "invalidInput": {
                    "summary": "Invalid input example",
                    "value": {
                      "error": {
                        "json": {
                          "message": "Input validation failed",
                          "code": -32600,
                          "data": {
                            "code": "BAD_REQUEST",
                            "httpStatus": 400,
                            "path": "users.getUserById",
                            "zodError": {
                              "formErrors": [
                                "Required"
                              ],
                              "fieldErrors": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TRPCError"
                }
              }
            }
          }
        },
        "security": []
      }
    }
  }
}