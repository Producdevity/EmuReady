name: E2E Tests

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "src/**"
      - "tests/**"
      - "playwright.config.ts"
      - "package.json"
      - "package-lock.json"

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: emuready_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/emuready_test"
      DATABASE_DIRECT_URL: "postgresql://postgres:postgres@localhost:5432/emuready_test"
      NODE_ENV: "test"
      CI: "true"
      NEXT_TELEMETRY_DISABLED: "1"
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      CLERK_WEBHOOK_SECRET: ${{ secrets.CLERK_WEBHOOK_SECRET }}
      IGDB_CLIENT_KEY: ${{ secrets.IGDB_CLIENT_KEY }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      NEXT_PUBLIC_GA_ID: ${{ secrets.NEXT_PUBLIC_GA_ID }}
      NEXT_PUBLIC_IGDB_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_IGDB_CLIENT_ID }}
      NEXT_PUBLIC_LOCAL_STORAGE_PREFIX: ${{ secrets.NEXT_PUBLIC_LOCAL_STORAGE_PREFIX }}
      RAWG_API_KEY: ${{ secrets.RAWG_API_KEY }}
      THE_GAMES_DB_API_KEY: ${{ secrets.THE_GAMES_DB_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.16.0
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Build application
        run: npm run build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: npm run test:e2e:ci:full
        env:
          # Test user credentials
          TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL || 'user@emuready.com' }}
          TEST_AUTHOR_EMAIL: ${{ secrets.TEST_AUTHOR_EMAIL || 'author@emuready.com' }}
          TEST_MODERATOR_EMAIL: ${{ secrets.TEST_MODERATOR_EMAIL || 'moderator@emuready.com' }}
          TEST_DEVELOPER_EMAIL: ${{ secrets.TEST_DEVELOPER_EMAIL || 'developer@emuready.com' }}
          TEST_ADMIN_EMAIL: ${{ secrets.TEST_ADMIN_EMAIL || 'admin@emuready.com' }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD || 'DevPassword123!' }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-videos
          path: test-results/
          retention-days: 7
